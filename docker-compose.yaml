version: '3.8'

services:
  # http_nginx
  webserver:
    build:
      context: ./docker/nginx
    container_name: webserver
    restart: always
    ports:
      - 8080:80
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d/
    depends_on:
      - mysql_server
      - nodejs
    networks:
      - docker-nodeapp

  # mysql_db
  mysql_server:
    build:
      context: ./docker/mysql
      args:
        environment:
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    container_name: mysql_server
    restart: always
    volumes:
      - ./.docker/mysql/:/var/lib/mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - docker-nodeapp

  # nodejs
  nodejs:
    build:
      context: ./docker/node
    container_name: nodejs
    restart: always
    volumes:
      - ./:/var/www/
    ports:
      - 3000:3000
    entrypoint: dockerize -wait tcp://mysql_server:3306
    command: /bin/sh -c "npm install && npm run start"
    depends_on:
      - mysql_server
    networks:
      - docker-nodeapp

networks:
  docker-nodeapp:
    driver: bridge
